{"ast":null,"code":"import { FilterType } from '../filter.models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction FilterComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nclass FilterComponent {\n  constructor() {\n    this.filters = new Map();\n    this.filter = {};\n  }\n  ngOnInit() {\n    this.config.filters.forEach(filter_config => {\n      this.filters.set(filter_config.type, new FilterItem(filter_config));\n    });\n    console.log(this.filters);\n    this.update(`000`, this.filters.get(FilterType.Rede));\n  }\n  update(hash, filter) {\n    this.notify(filter);\n  }\n  notify(filter) {\n    filter.config.filter_watch.forEach(e => {\n      this.filters.get(e).update();\n    });\n  }\n}\nFilterComponent.ɵfac = function FilterComponent_Factory(t) {\n  return new (t || FilterComponent)();\n};\nFilterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FilterComponent,\n  selectors: [[\"app-filter\"]],\n  inputs: {\n    config: \"config\"\n  },\n  decls: 4,\n  vars: 3,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function FilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"filter works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, FilterComponent_ng_container_2_Template, 1, 0, \"ng-container\", 0);\n      i0.ɵɵpipe(3, \"keyvalue\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(3, 1, ctx.filters));\n    }\n  },\n  dependencies: [i1.NgForOf, i1.KeyValuePipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { FilterComponent };\nclass FilterItem {\n  constructor(config) {\n    this.selected = \"\";\n    this.data = [{\n      hash: '000',\n      descricao: 'XXX'\n    }, {\n      hash: '000',\n      descricao: 'XXX'\n    }, {\n      hash: '000',\n      descricao: 'XXX'\n    }, {\n      hash: '000',\n      descricao: 'XXX'\n    }, {\n      hash: '000',\n      descricao: 'XXX'\n    }, {\n      hash: '000',\n      descricao: 'XXX'\n    }, {\n      hash: '000',\n      descricao: 'XXX'\n    }, {\n      hash: '000',\n      descricao: 'XXX'\n    }, {\n      hash: '000',\n      descricao: 'XXX'\n    }, {\n      hash: '000',\n      descricao: 'XXX'\n    }, {\n      hash: '000',\n      descricao: 'XXX'\n    }];\n    this.config = config;\n    if (config.type === FilterType.AnoLetivo) {\n      this.data = [{\n        hash: '2023',\n        descricao: '2023'\n      }];\n    }\n    this.getData(this.data);\n  }\n  getData(data) {\n    this.data = data;\n    if (this.data.length === 1) {\n      this.selected = this.data[0].hash;\n    }\n  }\n  update() {\n    console.log(`Fazendo update atraves de notificacao`);\n  }\n}","map":{"version":3,"names":["FilterType","i0","ɵɵelementContainer","FilterComponent","constructor","filters","Map","filter","ngOnInit","config","forEach","filter_config","set","type","FilterItem","console","log","update","get","Rede","hash","notify","filter_watch","e","selectors","inputs","decls","vars","consts","template","FilterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","FilterComponent_ng_container_2_Template","ɵɵadvance","ɵɵproperty","ɵɵpipeBind1","selected","data","descricao","AnoLetivo","getData","length"],"sources":["/home/czernobog/projects/atlas-filter/src/app/filter/filter/filter.component.ts","/home/czernobog/projects/atlas-filter/src/app/filter/filter/filter.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FilterConfig, FilterItemConfig, FilterType } from '../filter.models';\n\nimport { NgForm, FormGroup, FormControl, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css']\n})\nexport class FilterComponent implements OnInit {\n  @Input() config: FilterConfig;\n\n  filters: Map<FilterType, FilterItem> = new Map();\n  filter: any = {};\n\n  ngOnInit(): void {\n    this.config.filters.forEach((filter_config) => {\n      this.filters.set(filter_config.type, new FilterItem(filter_config))\n    })\n    console.log(this.filters)\n    this.update(`000`, this.filters.get(FilterType.Rede));\n  }\n\n  update(hash: string, filter: FilterItem) {\n    this.notify(filter)\n  }\n\n  notify(filter: FilterItem) {\n    filter.config.filter_watch.forEach((e) => {\n      this.filters.get(e).update();\n    })\n  }\n\n}\n\nclass FilterItem {\n  config: FilterItemConfig;\n  selected: string | Array<string> = \"\";\n\n  data = [\n    { hash: '000', descricao: 'XXX', },\n    { hash: '000', descricao: 'XXX', },\n    { hash: '000', descricao: 'XXX', },\n    { hash: '000', descricao: 'XXX', },\n    { hash: '000', descricao: 'XXX', },\n    { hash: '000', descricao: 'XXX', },\n    { hash: '000', descricao: 'XXX', },\n    { hash: '000', descricao: 'XXX', },\n    { hash: '000', descricao: 'XXX', },\n    { hash: '000', descricao: 'XXX', },\n    { hash: '000', descricao: 'XXX', },\n  ]\n\n  constructor(config: FilterItemConfig) {\n    this.config = config;\n    if (config.type === FilterType.AnoLetivo) {\n      this.data = [{ hash: '2023', descricao: '2023', }];\n    }\n    this.getData(this.data);\n  }\n\n  getData(data: any) {\n    this.data = data;\n    if (this.data.length === 1) {\n      this.selected = this.data[0].hash;\n    }\n  }\n\n  update() {\n    console.log(`Fazendo update atraves de notificacao`)\n  }\n}\n","<p>filter works!</p>\n\n<ng-container *ngFor=\"let filter of filters | keyvalue\">\n</ng-container>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}