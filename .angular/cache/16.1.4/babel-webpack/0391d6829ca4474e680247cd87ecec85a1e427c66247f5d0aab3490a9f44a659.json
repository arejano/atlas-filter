{"ast":null,"code":"import { FilterType } from '../filter.models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction FilterComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const filter_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", filter_r1.key, \"\", filter_r1.value, \"\");\n  }\n}\nclass FilterComponent {\n  constructor() {\n    this.filters = new Map();\n    this.filter = {};\n  }\n  ngOnInit() {\n    this.config.filters.forEach(filter_config => {\n      this.filters.set(filter_config.type, new FilterItem(filter_config));\n    });\n    console.log(this.filters);\n    this.update(`000`, this.filters.get(FilterType.Rede));\n  }\n  update(hash, filter) {\n    this.filter[filter.config.key] = hash;\n    this.notify();\n  }\n  notify() {\n    this.filters.forEach(filter => {\n      console.log(filter.config);\n    });\n  }\n}\nFilterComponent.ɵfac = function FilterComponent_Factory(t) {\n  return new (t || FilterComponent)();\n};\nFilterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FilterComponent,\n  selectors: [[\"app-filter\"]],\n  inputs: {\n    config: \"config\"\n  },\n  decls: 4,\n  vars: 3,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function FilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"filter works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, FilterComponent_ng_container_2_Template, 3, 2, \"ng-container\", 0);\n      i0.ɵɵpipe(3, \"keyvalue\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(3, 1, ctx.filters));\n    }\n  },\n  dependencies: [i1.NgForOf, i1.KeyValuePipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { FilterComponent };\nclass FilterItem {\n  constructor(config) {\n    this.config = config;\n  }\n}","map":{"version":3,"names":["FilterType","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵadvance","ɵɵtextInterpolate2","filter_r1","key","value","FilterComponent","constructor","filters","Map","filter","ngOnInit","config","forEach","filter_config","set","type","FilterItem","console","log","update","get","Rede","hash","notify","selectors","inputs","decls","vars","consts","template","FilterComponent_Template","rf","ctx","ɵɵtemplate","FilterComponent_ng_container_2_Template","ɵɵproperty","ɵɵpipeBind1"],"sources":["/home/czernobog/projects/atlas-filter/src/app/filter/filter/filter.component.ts","/home/czernobog/projects/atlas-filter/src/app/filter/filter/filter.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FilterConfig, FilterItemConfig, FilterType } from '../filter.models';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css']\n})\nexport class FilterComponent implements OnInit {\n  @Input() config: FilterConfig;\n\n  filters: Map<FilterType, FilterItem> = new Map();\n  filter: any = {};\n\n  ngOnInit(): void {\n    this.config.filters.forEach((filter_config) => {\n      this.filters.set(filter_config.type, new FilterItem(filter_config))\n    })\n    console.log(this.filters)\n    this.update(`000`, this.filters.get(FilterType.Rede));\n  }\n\n  update(hash: string, filter: FilterItem) {\n    this.filter[filter.config.key] = hash;\n    this.notify();\n  }\n\n  notify() {\n    this.filters.forEach((filter) => {\n      console.log(filter.config);\n    })\n  }\n\n}\n\nclass FilterItem {\n  config: FilterItemConfig;\n\n  constructor(config: FilterItemConfig) {\n    this.config = config;\n  }\n}\n","<p>filter works!</p>\n\n<ng-container *ngFor=\"let filter of filters | keyvalue\">\n\t<span>{{filter.key}}{{filter.value}}</span>\n</ng-container>\n"],"mappings":"AACA,SAAyCA,UAAU,QAAQ,kBAAkB;;;;;ICC7EC,EAAA,CAAAC,uBAAA,GAAwD;IACvDD,EAAA,CAAAE,cAAA,WAAM;IAAAF,EAAA,CAAAG,MAAA,GAA8B;IAAAH,EAAA,CAAAI,YAAA,EAAO;IAC5CJ,EAAA,CAAAK,qBAAA,EAAe;;;;IADRL,EAAA,CAAAM,SAAA,GAA8B;IAA9BN,EAAA,CAAAO,kBAAA,KAAAC,SAAA,CAAAC,GAAA,MAAAD,SAAA,CAAAE,KAAA,KAA8B;;;ADArC,MAKaC,eAAe;EAL5BC,YAAA;IAQE,KAAAC,OAAO,GAAgC,IAAIC,GAAG,EAAE;IAChD,KAAAC,MAAM,GAAQ,EAAE;;EAEhBC,QAAQA,CAAA;IACN,IAAI,CAACC,MAAM,CAACJ,OAAO,CAACK,OAAO,CAAEC,aAAa,IAAI;MAC5C,IAAI,CAACN,OAAO,CAACO,GAAG,CAACD,aAAa,CAACE,IAAI,EAAE,IAAIC,UAAU,CAACH,aAAa,CAAC,CAAC;IACrE,CAAC,CAAC;IACFI,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,OAAO,CAAC;IACzB,IAAI,CAACY,MAAM,CAAC,KAAK,EAAE,IAAI,CAACZ,OAAO,CAACa,GAAG,CAAC3B,UAAU,CAAC4B,IAAI,CAAC,CAAC;EACvD;EAEAF,MAAMA,CAACG,IAAY,EAAEb,MAAkB;IACrC,IAAI,CAACA,MAAM,CAACA,MAAM,CAACE,MAAM,CAACR,GAAG,CAAC,GAAGmB,IAAI;IACrC,IAAI,CAACC,MAAM,EAAE;EACf;EAEAA,MAAMA,CAAA;IACJ,IAAI,CAAChB,OAAO,CAACK,OAAO,CAAEH,MAAM,IAAI;MAC9BQ,OAAO,CAACC,GAAG,CAACT,MAAM,CAACE,MAAM,CAAC;IAC5B,CAAC,CAAC;EACJ;;AAvBWN,eAAe,C;mBAAfA,eAAe;AAAA;AAAfA,eAAe,C;QAAfA,eAAe;EAAAmB,SAAA;EAAAC,MAAA;IAAAd,MAAA;EAAA;EAAAe,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR5BrC,EAAA,CAAAE,cAAA,QAAG;MAAAF,EAAA,CAAAG,MAAA,oBAAa;MAAAH,EAAA,CAAAI,YAAA,EAAI;MAEpBJ,EAAA,CAAAuC,UAAA,IAAAC,uCAAA,0BAEe;;;;MAFkBxC,EAAA,CAAAM,SAAA,GAAqB;MAArBN,EAAA,CAAAyC,UAAA,YAAAzC,EAAA,CAAA0C,WAAA,OAAAJ,GAAA,CAAAzB,OAAA,EAAqB;;;;;;SDMzCF,eAAe;AA2B5B,MAAMW,UAAU;EAGdV,YAAYK,MAAwB;IAClC,IAAI,CAACA,MAAM,GAAGA,MAAM;EACtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}