{"ast":null,"code":"import { FilterType } from '../filter.models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction FilterComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nclass FilterComponent {\n  constructor() {\n    this.filters = new Map();\n    this.filter = {};\n    this.cars = [{\n      id: 1,\n      name: 'Volvo'\n    }, {\n      id: 2,\n      name: 'Saab'\n    }, {\n      id: 3,\n      name: 'Opel'\n    }, {\n      id: 4,\n      name: 'Audi'\n    }];\n  }\n  ngOnInit() {\n    this.config.filters.forEach(filter_config => {\n      this.filters.set(filter_config.type, new FilterItem(filter_config));\n    });\n    console.log(this.filters);\n    this.update(`000`, this.filters.get(FilterType.Rede));\n  }\n  update(hash, filter) {\n    console.log(hash);\n    // this.filter[filter.config.key] = hash;\n    // this.notify();\n  }\n\n  notify() {\n    this.filters.forEach(filter => {\n      console.log(filter.config);\n    });\n  }\n}\nFilterComponent.ɵfac = function FilterComponent_Factory(t) {\n  return new (t || FilterComponent)();\n};\nFilterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FilterComponent,\n  selectors: [[\"app-filter\"]],\n  inputs: {\n    config: \"config\"\n  },\n  decls: 4,\n  vars: 3,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function FilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"filter works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, FilterComponent_ng_container_2_Template, 1, 0, \"ng-container\", 0);\n      i0.ɵɵpipe(3, \"keyvalue\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(3, 1, ctx.filters));\n    }\n  },\n  dependencies: [i1.NgForOf, i1.KeyValuePipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { FilterComponent };\nclass FilterItem {\n  constructor(config) {\n    this.data = [{\n      hash: '000',\n      descricao: 'XXX'\n    }, {\n      hash: '000',\n      descricao: 'XXX'\n    }, {\n      hash: '000',\n      descricao: 'XXX'\n    }, {\n      hash: '000',\n      descricao: 'XXX'\n    }, {\n      hash: '000',\n      descricao: 'XXX'\n    }, {\n      hash: '000',\n      descricao: 'XXX'\n    }, {\n      hash: '000',\n      descricao: 'XXX'\n    }, {\n      hash: '000',\n      descricao: 'XXX'\n    }, {\n      hash: '000',\n      descricao: 'XXX'\n    }, {\n      hash: '000',\n      descricao: 'XXX'\n    }, {\n      hash: '000',\n      descricao: 'XXX'\n    }];\n    this.config = config;\n  }\n}","map":{"version":3,"names":["FilterType","i0","ɵɵelementContainer","FilterComponent","constructor","filters","Map","filter","cars","id","name","ngOnInit","config","forEach","filter_config","set","type","FilterItem","console","log","update","get","Rede","hash","notify","selectors","inputs","decls","vars","consts","template","FilterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","FilterComponent_ng_container_2_Template","ɵɵadvance","ɵɵproperty","ɵɵpipeBind1","data","descricao"],"sources":["/home/czernobog/projects/atlas-filter/src/app/filter/filter/filter.component.ts","/home/czernobog/projects/atlas-filter/src/app/filter/filter/filter.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FilterConfig, FilterItemConfig, FilterType } from '../filter.models';\n\nimport { NgForm, FormGroup, FormControl, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css']\n})\nexport class FilterComponent implements OnInit {\n  @Input() config: FilterConfig;\n\n  filters: Map<FilterType, FilterItem> = new Map();\n  filter: any = {};\n\n  selectedCar: number;\n\n  cars = [\n    { id: 1, name: 'Volvo' },\n    { id: 2, name: 'Saab' },\n    { id: 3, name: 'Opel' },\n    { id: 4, name: 'Audi' },\n  ];\n\n  ngOnInit(): void {\n    this.config.filters.forEach((filter_config) => {\n      this.filters.set(filter_config.type, new FilterItem(filter_config))\n    })\n    console.log(this.filters)\n    this.update(`000`, this.filters.get(FilterType.Rede));\n  }\n\n  update(hash: string, filter: FilterItem) {\n    console.log(hash)\n    // this.filter[filter.config.key] = hash;\n    // this.notify();\n  }\n\n  notify() {\n    this.filters.forEach((filter) => {\n      console.log(filter.config);\n    })\n  }\n\n}\n\nclass FilterItem {\n  config: FilterItemConfig;\n  data = [\n    { hash: '000', descricao: 'XXX', },\n    { hash: '000', descricao: 'XXX', },\n    { hash: '000', descricao: 'XXX', },\n    { hash: '000', descricao: 'XXX', },\n    { hash: '000', descricao: 'XXX', },\n    { hash: '000', descricao: 'XXX', },\n    { hash: '000', descricao: 'XXX', },\n    { hash: '000', descricao: 'XXX', },\n    { hash: '000', descricao: 'XXX', },\n    { hash: '000', descricao: 'XXX', },\n    { hash: '000', descricao: 'XXX', },\n  ]\n\n  constructor(config: FilterItemConfig) {\n    this.config = config;\n  }\n}\n","<p>filter works!</p>\n\n<ng-container *ngFor=\"let filter of filters | keyvalue\">\n</ng-container>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}