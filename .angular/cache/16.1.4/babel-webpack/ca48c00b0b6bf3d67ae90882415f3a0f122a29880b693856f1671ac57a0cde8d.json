{"ast":null,"code":"import { FilterType } from '../filter.models';\nimport * as i0 from \"@angular/core\";\nclass FilterComponent {\n  constructor() {\n    this.filters = new Map();\n    this.filter = {};\n  }\n  ngOnInit() {\n    this.config.filters.forEach(filter_config => {\n      this.filters.set(filter_config.type, new FilterItem(filter_config));\n    });\n    console.log(this.filters);\n    this.update(`000`, this.filters.get(FilterType.Rede));\n  }\n  // Entrada para o filtro de cada item, salva os dados no filtro referente, encontra os que tem que ser atualizados\n  update(hash, filter) {\n    this.filter[filter.config.key] = hash;\n    //Notifica os que precisam ser atualizados\n    this.notify();\n  }\n  // Avisar os filtros que foram alterados\n  notify() {}\n}\nFilterComponent.ɵfac = function FilterComponent_Factory(t) {\n  return new (t || FilterComponent)();\n};\nFilterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FilterComponent,\n  selectors: [[\"app-filter\"]],\n  inputs: {\n    config: \"config\"\n  },\n  decls: 2,\n  vars: 0,\n  template: function FilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"filter works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { FilterComponent };\nclass FilterItem {\n  constructor(config) {\n    this.config = config;\n  }\n}","map":{"version":3,"names":["FilterType","FilterComponent","constructor","filters","Map","filter","ngOnInit","config","forEach","filter_config","set","type","FilterItem","console","log","update","get","Rede","hash","key","notify","selectors","inputs","decls","vars","template","FilterComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["/home/czernobog/projects/atlas-filter/src/app/filter/filter/filter.component.ts","/home/czernobog/projects/atlas-filter/src/app/filter/filter/filter.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FilterConfig, FilterItemConfig, FilterType } from '../filter.models';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css']\n})\nexport class FilterComponent implements OnInit {\n  @Input() config: FilterConfig;\n\n  filters: Map<FilterType, FilterItem> = new Map();\n  filter: any = {};\n\n  ngOnInit(): void {\n    this.config.filters.forEach((filter_config) => {\n      this.filters.set(filter_config.type, new FilterItem(filter_config))\n    })\n    console.log(this.filters)\n    this.update(`000`, this.filters.get(FilterType.Rede));\n  }\n\n  // Entrada para o filtro de cada item, salva os dados no filtro referente, encontra os que tem que ser atualizados\n  update(hash: string, filter: FilterItem) {\n    this.filter[filter.config.key] = hash;\n\n    //Notifica os que precisam ser atualizados\n    this.notify();\n  }\n\n  // Avisar os filtros que foram alterados\n  notify() {\n\n  }\n\n}\n\nclass FilterItem {\n  config: FilterItemConfig;\n  constructor(config: FilterItemConfig) {\n    this.config = config;\n  }\n}\n","<p>filter works!</p>\n"],"mappings":"AACA,SAAyCA,UAAU,QAAQ,kBAAkB;;AAE7E,MAKaC,eAAe;EAL5BC,YAAA;IAQE,KAAAC,OAAO,GAAgC,IAAIC,GAAG,EAAE;IAChD,KAAAC,MAAM,GAAQ,EAAE;;EAEhBC,QAAQA,CAAA;IACN,IAAI,CAACC,MAAM,CAACJ,OAAO,CAACK,OAAO,CAAEC,aAAa,IAAI;MAC5C,IAAI,CAACN,OAAO,CAACO,GAAG,CAACD,aAAa,CAACE,IAAI,EAAE,IAAIC,UAAU,CAACH,aAAa,CAAC,CAAC;IACrE,CAAC,CAAC;IACFI,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,OAAO,CAAC;IACzB,IAAI,CAACY,MAAM,CAAC,KAAK,EAAE,IAAI,CAACZ,OAAO,CAACa,GAAG,CAAChB,UAAU,CAACiB,IAAI,CAAC,CAAC;EACvD;EAEA;EACAF,MAAMA,CAACG,IAAY,EAAEb,MAAkB;IACrC,IAAI,CAACA,MAAM,CAACA,MAAM,CAACE,MAAM,CAACY,GAAG,CAAC,GAAGD,IAAI;IAErC;IACA,IAAI,CAACE,MAAM,EAAE;EACf;EAEA;EACAA,MAAMA,CAAA,GAEN;;AAzBWnB,eAAe,C;mBAAfA,eAAe;AAAA;AAAfA,eAAe,C;QAAfA,eAAe;EAAAoB,SAAA;EAAAC,MAAA;IAAAf,MAAA;EAAA;EAAAgB,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR5BE,EAAA,CAAAC,cAAA,QAAG;MAAAD,EAAA,CAAAE,MAAA,oBAAa;MAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;SDQP/B,eAAe;AA6B5B,MAAMW,UAAU;EAEdV,YAAYK,MAAwB;IAClC,IAAI,CAACA,MAAM,GAAGA,MAAM;EACtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}