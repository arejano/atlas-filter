{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass FilterComponent {\n  ngOnInit() {\n    console.log(this.config);\n  }\n  //Recebe a configuracao de um FILTRO e constroi de acordo\n  start(config) {}\n  // Entrada para o filtro de cada item, salva os dados no filtro referente, encontra os que tem que ser atualizados\n  update() {\n    //Notifica os que precisam ser atualizados\n    this.notify();\n  }\n  // Avisar os filtros que foram alterados\n  notify() {}\n}\nFilterComponent.ɵfac = function FilterComponent_Factory(t) {\n  return new (t || FilterComponent)();\n};\nFilterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FilterComponent,\n  selectors: [[\"app-filter\"]],\n  inputs: {\n    config: \"config\"\n  },\n  decls: 2,\n  vars: 0,\n  template: function FilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"filter works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { FilterComponent };","map":{"version":3,"names":["FilterComponent","ngOnInit","console","log","config","start","update","notify","selectors","inputs","decls","vars","template","FilterComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["/home/czernobog/projects/atlas-filter/src/app/filter/filter/filter.component.ts","/home/czernobog/projects/atlas-filter/src/app/filter/filter/filter.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FilterConfig } from '../filter.models';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css']\n})\nexport class FilterComponent implements OnInit {\n  @Input() config: Array<FilterConfig>;\n\n  ngOnInit(): void {\n    console.log(this.config)\n  }\n\n  //Recebe a configuracao de um FILTRO e constroi de acordo\n  start(config: FilterConfig) {\n\n  }\n\n  // Entrada para o filtro de cada item, salva os dados no filtro referente, encontra os que tem que ser atualizados\n  update() {\n\n    //Notifica os que precisam ser atualizados\n    this.notify();\n  }\n\n  // Avisar os filtros que foram alterados\n  notify() {\n\n  }\n\n}\n","<p>filter works!</p>\n"],"mappings":";AAGA,MAKaA,eAAe;EAG1BC,QAAQA,CAAA;IACNC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,MAAM,CAAC;EAC1B;EAEA;EACAC,KAAKA,CAACD,MAAoB,GAE1B;EAEA;EACAE,MAAMA,CAAA;IAEJ;IACA,IAAI,CAACC,MAAM,EAAE;EACf;EAEA;EACAA,MAAMA,CAAA,GAEN;;AAtBWP,eAAe,C;mBAAfA,eAAe;AAAA;AAAfA,eAAe,C;QAAfA,eAAe;EAAAQ,SAAA;EAAAC,MAAA;IAAAL,MAAA;EAAA;EAAAM,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR5BE,EAAA,CAAAC,cAAA,QAAG;MAAAD,EAAA,CAAAE,MAAA,oBAAa;MAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;SDQPnB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}