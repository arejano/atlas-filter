{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { FilterType } from '../filter.models';\nlet FilterComponent = class FilterComponent {\n  constructor() {\n    this.filters = new Map();\n    this.filter = {};\n  }\n  ngOnInit() {\n    this.config.filters.forEach(filter_config => {\n      this.filters.set(filter_config.type, new FilterItem(filter_config));\n    });\n    console.log(this.filters);\n    this.update(`000`, this.filters.get(FilterType.Rede));\n  }\n  update(hash, filter) {\n    this.filter[filter.config.key] = hash;\n    this.notify();\n  }\n  notify() {\n    this.filters.forEach(filter => {\n      console.log(filter.config);\n    });\n  }\n};\n__decorate([Input()], FilterComponent.prototype, \"config\", void 0);\nFilterComponent = __decorate([Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css']\n})], FilterComponent);\nexport { FilterComponent };\nclass FilterItem {\n  constructor(config) {\n    this.config = config;\n  }\n}","map":{"version":3,"names":["Component","Input","FilterType","FilterComponent","constructor","filters","Map","filter","ngOnInit","config","forEach","filter_config","set","type","FilterItem","console","log","update","get","Rede","hash","key","notify","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/czernobog/projects/atlas-filter/src/app/filter/filter/filter.component.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FilterConfig, FilterItemConfig, FilterType } from '../filter.models';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css']\n})\nexport class FilterComponent implements OnInit {\n  @Input() config: FilterConfig;\n\n  filters: Map<FilterType, FilterItem> = new Map();\n  filter: any = {};\n\n  ngOnInit(): void {\n    this.config.filters.forEach((filter_config) => {\n      this.filters.set(filter_config.type, new FilterItem(filter_config))\n    })\n    console.log(this.filters)\n    this.update(`000`, this.filters.get(FilterType.Rede));\n  }\n\n  update(hash: string, filter: FilterItem) {\n    this.filter[filter.config.key] = hash;\n    this.notify();\n  }\n\n  notify() {\n    this.filters.forEach((filter) => {\n      console.log(filter.config);\n    })\n  }\n\n}\n\nclass FilterItem {\n  config: FilterItemConfig;\n\n  constructor(config: FilterItemConfig) {\n    this.config = config;\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAAgB,eAAe;AACxD,SAAyCC,UAAU,QAAQ,kBAAkB;AAO7E,IAAaC,eAAe,GAA5B,MAAaA,eAAe;EAA5BC,YAAA;IAGE,KAAAC,OAAO,GAAgC,IAAIC,GAAG,EAAE;IAChD,KAAAC,MAAM,GAAQ,EAAE;EAqBlB;EAnBEC,QAAQA,CAAA;IACN,IAAI,CAACC,MAAM,CAACJ,OAAO,CAACK,OAAO,CAAEC,aAAa,IAAI;MAC5C,IAAI,CAACN,OAAO,CAACO,GAAG,CAACD,aAAa,CAACE,IAAI,EAAE,IAAIC,UAAU,CAACH,aAAa,CAAC,CAAC;IACrE,CAAC,CAAC;IACFI,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,OAAO,CAAC;IACzB,IAAI,CAACY,MAAM,CAAC,KAAK,EAAE,IAAI,CAACZ,OAAO,CAACa,GAAG,CAAChB,UAAU,CAACiB,IAAI,CAAC,CAAC;EACvD;EAEAF,MAAMA,CAACG,IAAY,EAAEb,MAAkB;IACrC,IAAI,CAACA,MAAM,CAACA,MAAM,CAACE,MAAM,CAACY,GAAG,CAAC,GAAGD,IAAI;IACrC,IAAI,CAACE,MAAM,EAAE;EACf;EAEAA,MAAMA,CAAA;IACJ,IAAI,CAACjB,OAAO,CAACK,OAAO,CAAEH,MAAM,IAAI;MAC9BQ,OAAO,CAACC,GAAG,CAACT,MAAM,CAACE,MAAM,CAAC;IAC5B,CAAC,CAAC;EACJ;CAED;AAxBUc,UAAA,EAARtB,KAAK,EAAE,C,8CAAsB;AADnBE,eAAe,GAAAoB,UAAA,EAL3BvB,SAAS,CAAC;EACTwB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWvB,eAAe,CAyB3B;SAzBYA,eAAe;AA2B5B,MAAMW,UAAU;EAGdV,YAAYK,MAAwB;IAClC,IAAI,CAACA,MAAM,GAAGA,MAAM;EACtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}