{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass FilterComponent {\n  ngOnInit() {\n    this.config.filters.forEach(filter_config => {\n      this.filters.set(filter_config.type, new FilterItem(filter_config));\n    });\n  }\n  // Entrada para o filtro de cada item, salva os dados no filtro referente, encontra os que tem que ser atualizados\n  update(hash, config) {\n    let filter = this.filters.get(config.type);\n    //Notifica os que precisam ser atualizados\n    this.notify();\n  }\n  // Avisar os filtros que foram alterados\n  notify() {}\n}\nFilterComponent.ɵfac = function FilterComponent_Factory(t) {\n  return new (t || FilterComponent)();\n};\nFilterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FilterComponent,\n  selectors: [[\"app-filter\"]],\n  inputs: {\n    config: \"config\"\n  },\n  decls: 2,\n  vars: 0,\n  template: function FilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"filter works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { FilterComponent };\nclass FilterItem {\n  constructor(config) {}\n}","map":{"version":3,"names":["FilterComponent","ngOnInit","config","filters","forEach","filter_config","set","type","FilterItem","update","hash","filter","get","notify","selectors","inputs","decls","vars","template","FilterComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","constructor"],"sources":["/home/czernobog/projects/atlas-filter/src/app/filter/filter/filter.component.ts","/home/czernobog/projects/atlas-filter/src/app/filter/filter/filter.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FilterConfig, FilterItemConfig, FilterType } from '../filter.models';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css']\n})\nexport class FilterComponent implements OnInit {\n  @Input() config: FilterConfig;\n\n  filters: Map<FilterType, FilterItem>\n\n  ngOnInit(): void {\n    this.config.filters.forEach((filter_config) => {\n      this.filters.set(filter_config.type, new FilterItem(filter_config))\n    })\n  }\n\n  // Entrada para o filtro de cada item, salva os dados no filtro referente, encontra os que tem que ser atualizados\n  update(hash: string, config: FilterItemConfig) {\n    let filter = this.filters.get(config.type);\n\n\n    //Notifica os que precisam ser atualizados\n    this.notify();\n  }\n\n  // Avisar os filtros que foram alterados\n  notify() {\n\n  }\n\n}\n\nclass FilterItem {\n  constructor(config: FilterItemConfig) {\n\n  }\n}\n","<p>filter works!</p>\n"],"mappings":";AAGA,MAKaA,eAAe;EAK1BC,QAAQA,CAAA;IACN,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,OAAO,CAAEC,aAAa,IAAI;MAC5C,IAAI,CAACF,OAAO,CAACG,GAAG,CAACD,aAAa,CAACE,IAAI,EAAE,IAAIC,UAAU,CAACH,aAAa,CAAC,CAAC;IACrE,CAAC,CAAC;EACJ;EAEA;EACAI,MAAMA,CAACC,IAAY,EAAER,MAAwB;IAC3C,IAAIS,MAAM,GAAG,IAAI,CAACR,OAAO,CAACS,GAAG,CAACV,MAAM,CAACK,IAAI,CAAC;IAG1C;IACA,IAAI,CAACM,MAAM,EAAE;EACf;EAEA;EACAA,MAAMA,CAAA,GAEN;;AAvBWb,eAAe,C;mBAAfA,eAAe;AAAA;AAAfA,eAAe,C;QAAfA,eAAe;EAAAc,SAAA;EAAAC,MAAA;IAAAb,MAAA;EAAA;EAAAc,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR5BE,EAAA,CAAAC,cAAA,QAAG;MAAAD,EAAA,CAAAE,MAAA,oBAAa;MAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;SDQPzB,eAAe;AA2B5B,MAAMQ,UAAU;EACdkB,YAAYxB,MAAwB,GAEpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}